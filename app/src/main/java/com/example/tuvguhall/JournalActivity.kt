package com.example.tuvguhall

import android.os.Bundle
import android.widget.ArrayAdapter
import android.widget.ListView
import android.widget.Toast
import android.widget.Button
import androidx.appcompat.app.AppCompatActivity
import com.google.firebase.database.*

class JournalActivity : AppCompatActivity() {

    private lateinit var listView: ListView
    private lateinit var dbRef: DatabaseReference
    private val journalItems = mutableListOf<String>()

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_journal)

        listView = findViewById(R.id.journalListView)
        dbRef = FirebaseDatabase.getInstance().getReference("Schedule")

        loadJournal()
        val exportButton = findViewById<Button>(R.id.buttonExport)

        exportButton.setOnClickListener {
            exportJournalToCSV()
        }
    }

    private fun loadJournal() {
        dbRef.addListenerForSingleValueEvent(object : ValueEventListener {
            override fun onDataChange(snapshot: DataSnapshot) {
                journalItems.clear()

                for (roomSnapshot in snapshot.children) {
                    val room = roomSnapshot.key ?: continue

                    for (dateSnapshot in roomSnapshot.children) {
                        val date = dateSnapshot.key ?: continue

                        for (slotSnapshot in dateSnapshot.children) {
                            val time = slotSnapshot.key ?: continue
                            val email = slotSnapshot.child("email").value?.toString() ?: "–ë–µ–∑ email"
                            val role = slotSnapshot.child("role").value?.toString() ?: "–ë–µ–∑ —Ä–æ–ª–∏"

                            val entry = "üìÖ $date ‚Äî $room ‚Äî $time ‚Äî $email ($role)"
                            journalItems.add(entry)
                        }
                    }
                }

                journalItems.sort() // —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ
                listView.adapter = ArrayAdapter(this@JournalActivity, android.R.layout.simple_list_item_1, journalItems)
            }

            override fun onCancelled(error: DatabaseError) {
                Toast.makeText(this@JournalActivity, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∂—É—Ä–Ω–∞–ª–∞", Toast.LENGTH_SHORT).show()
            }
        })
    }
    private fun exportJournalToCSV() {
        if (journalItems.isEmpty()) {
            Toast.makeText(this, "–ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç, –Ω–µ—á–µ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å", Toast.LENGTH_SHORT).show()
            return
        }

        val csvHeader = "–î–∞—Ç–∞,–ê—É–¥–∏—Ç–æ—Ä–∏—è,–í—Ä–µ–º—è,Email,–†–æ–ª—å\n"
        val csvBuilder = StringBuilder(csvHeader)

        for (entry in journalItems) {
            // –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä–æ–∫–∏: üìÖ 2025-03-25 ‚Äî 125 ‚Äî 08:30-10:00 ‚Äî ivanov@mail.ru (–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å)
            val cleanEntry = entry.replace("üìÖ ", "")
            val parts = cleanEntry.split(" ‚Äî ")

            if (parts.size >= 4) {
                val date = parts[0]
                val room = parts[1]
                val time = parts[2]
                val email = parts[3].substringBefore(" (")
                val role = parts[3].substringAfter("(", "–ù–µ—Ç").removeSuffix(")")

                csvBuilder.append("$date,$room,$time,$email,$role\n")
            }
        }

        try {
            val fileName = "journal_export.csv"
            val downloads = getExternalFilesDir(null) // internal-access to Downloads-like dir
            val file = java.io.File(downloads, fileName)
            file.writeText(csvBuilder.toString())

            Toast.makeText(this, "–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${file.absolutePath}", Toast.LENGTH_LONG).show()
        } catch (e: Exception) {
            Toast.makeText(this, "–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: ${e.message}", Toast.LENGTH_SHORT).show()
        }
    }
}